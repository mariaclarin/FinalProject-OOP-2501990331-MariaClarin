//importing necessary libraries
import java.sql.*;
import SQLManage.Connector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

//AdminManageStudent.java inherits the class from the JFrame STL in order to make it a JFrame Form to create UI
public class AdminManageStudents extends javax.swing.JFrame {

    //public constructor for the AdminManageStudents Class
    public AdminManageStudents() {
        initComponents();
    }

    /**NETBEANS GENERATED CODE FROM THE FRONT END DESIGN CONSOLE
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageStudentTitle = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        studentIDTitle = new javax.swing.JLabel();
        nameTitle = new javax.swing.JLabel();
        classTitle = new javax.swing.JLabel();
        genderTitle = new javax.swing.JLabel();
        contactNoTitle = new javax.swing.JLabel();
        emailTitle = new javax.swing.JLabel();
        addressTitle = new javax.swing.JLabel();
        studentIDInputField = new javax.swing.JTextField();
        nameInputField = new javax.swing.JTextField();
        classInputField = new javax.swing.JTextField();
        genderInputField = new javax.swing.JTextField();
        contactNoInputField = new javax.swing.JTextField();
        emailInputField = new javax.swing.JTextField();
        scoreInputField = new javax.swing.JTextField();
        deleteAllButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        addressInputField = new javax.swing.JTextField();
        scoreTitle = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageStudentTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        manageStudentTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/manageStudents.png"))); // NOI18N
        manageStudentTitle.setText("Manage Student Data ");
        getContentPane().add(manageStudentTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1750, 30, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 1920, 10));

        studentIDTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        studentIDTitle.setText("Student ID :");
        getContentPane().add(studentIDTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, -1, -1));

        nameTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        nameTitle.setText("Name :");
        getContentPane().add(nameTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, -1));

        classTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        classTitle.setText("Class :");
        getContentPane().add(classTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, -1, -1));

        genderTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        genderTitle.setText("Gender :");
        getContentPane().add(genderTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, -1, -1));

        contactNoTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        contactNoTitle.setText("Contact No. :");
        getContentPane().add(contactNoTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, -1, 30));

        emailTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        emailTitle.setText("Email :");
        getContentPane().add(emailTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, -1, -1));

        addressTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        addressTitle.setText("Address :");
        getContentPane().add(addressTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 490, -1, -1));

        studentIDInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(studentIDInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 180, -1));

        nameInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(nameInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 289, 1520, -1));

        classInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(classInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 332, 1520, -1));

        genderInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(genderInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 1520, -1));

        contactNoInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(contactNoInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 1520, -1));

        emailInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(emailInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 1520, -1));

        scoreInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(scoreInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 530, 1520, -1));

        deleteAllButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        deleteAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletemenuicon.png"))); // NOI18N
        deleteAllButton.setText("Delete All Student Data");
        deleteAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteAllButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 590, -1, -1));

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 590, -1, -1));

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/searchsmall.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, -1, 30));

        addressInputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(addressInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 490, 1520, -1));

        scoreTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        scoreTitle.setText("Quiz Score :");
        getContentPane().add(scoreTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 530, -1, -1));

        deleteButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deletemenuicon.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 590, -1, -1));

        updateButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatemenuicon.png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 590, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/addQuestionBackground.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    //EXIT BUTTON EVENT
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // if the exit button is clicked, the attribute open from AdminHomePage.java will be set to 0
        //and the program will return to the AdminHomePage page
        AdminHomePage.open=0;
        setVisible(false);
    }//GEN-LAST:event_exitButtonActionPerformed

    //DELETE ALL BUTTON EVENT
    private void deleteAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllButtonActionPerformed
        // if the user clicks the delete all button, a JFrame confirmation popup will appear to ask for user confirmation
        JFrame jf = new JFrame();
        jf.setAlwaysOnTop(true);
        int userConfirmation=JOptionPane.showConfirmDialog(jf, "Are you sure you want to delete ALL STUDENT DATA?", "Select", JOptionPane.YES_NO_OPTION);
        
        //if the user clicks the yes button
        if(userConfirmation==0)
        {
            //the try block commands will establish a connection between this file and the mysql database
            try
            {
                Connection con= Connector.getCon();
                
                //declaring the query into the mysql database to delete all rows in the 'student' table
                PreparedStatement ps = con.prepareStatement("delete from student"); 
                
                //executing the update in the mysql database
                ps.executeUpdate();
                
                //once the program is done updating, a Jframe popup message will appear 
                JFrame jf1 = new JFrame();
                jf1.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf1, "Successfully Deleted");
                
                //once the user exits the popup message, AdminManageStudents page will refresh
                setVisible(false);
                new AdminManageStudents().setVisible(true);
            }
            
            //a catch block to go alongside the try block if the try block fails which catches an exception if an error occurs
            catch(Exception e)
            {
                //displays a JFrame that is basically nothing. If the catch block is activated I take it as an indication that there is an error.
                JFrame jf2 = new JFrame();
                jf2.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf2, e);
            }
        }
    }//GEN-LAST:event_deleteAllButtonActionPerformed

    //CLEAR BUTTON EVENT
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // if the user clicks on the clear button, the program will clear all input fields on the screen.
        studentIDInputField.setText("");
        nameInputField.setText("");
        classInputField.setText("");
        genderInputField.setText("");
        contactNoInputField.setText("");
        emailInputField.setText("");
        addressInputField.setText("");
        scoreInputField.setText("");
        studentIDInputField.setEditable(true);
    }//GEN-LAST:event_clearButtonActionPerformed

    
    //SEARCH BUTTON EVENT
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        //a variable 'id' to store the user input from the studentIDInputField
        String id = studentIDInputField.getText();
        
        //the try block commands will establish a connection between this file and the mysql database.
        try
        {
            Connection con = Connector.getCon();
            Statement st= con.createStatement(); //creating a statement to execute in the mysql database
            
            //executing the query to select the data in the row where the id that the user input matches the id that exists in the StudentID collumn from the student table
            ResultSet rs = st.executeQuery("select *from student where StudentID='"+id+"'");
            
            //if the mysql terminal comes up with a result
            if(rs.next()){
                //the input fields will be set to display the data from the database from the corresponding collumns.
                nameInputField.setText(rs.getString(1));
                classInputField.setText(rs.getString(2));
                genderInputField.setText(rs.getString(3));
                contactNoInputField.setText(rs.getString(5));
                emailInputField.setText(rs.getString(6));
                addressInputField.setText(rs.getString(7));
                scoreInputField.setText(rs.getString(8));
                studentIDInputField.setEditable(false);
            }
            
            //if the mysql terminal doesnt come up with a result
            else
            {
                //a JFrame popup message will appear to state that the question ID doesnt exist
                JFrame jf = new JFrame();
                jf.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf, "Question ID not found.");
            }
        }
        
        //a catch block to go alongside the try block if the try block fails which catches an exception if an error ocurs
        catch(Exception e)
        {
            //displays a jFrame that is basically nothing. If the catch block is activated, I take it as an indication that there is an error
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    //DELETE BUTTON EVENT
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // a variable to store the user input from the studentIDInputField
        String studentID = studentIDInputField.getText();
        
        //the try block commands will establish a connection between this file and the mysql database
        try
        {
            Connection con= Connector.getCon();
            
            //declaring the query to delete a row from the student table where the studentID matches the user input
            PreparedStatement ps = con.prepareStatement("delete from student where StudentID=?");
            
            //executing the update in the mysql database
            ps.setString(1, studentID);
            ps.executeUpdate();
            
            //once the update is complete, a JFrame success popup will appear
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, "Successfully Deleted");
            
            //once the user exits the JFrame popup, the AdminManageStudents page will refresh
            setVisible(false);
            new AdminManageStudents().setVisible(true);
        }
        
        //a catch block to go alongside the try block if the try block fails which catches an exception if an error occurs
        catch(Exception e)
        {
            //displays a JFrame that is basically nothing. If the catch block is activated, I take it as an indication that there is an error
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, e);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    //UPDATE BUTTON EVENT
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        //variables to store user input from each input field
        String studentID = studentIDInputField.getText();
        String name = nameInputField.getText();
        String classInput = classInputField.getText();
        String gender = genderInputField.getText();
        String contactNo = contactNoInputField.getText();
        String email = emailInputField.getText();
        String address = addressInputField.getText();
        int score = Integer.parseInt(scoreInputField.getText()); // turning the string to integer for the quiz score
        
        //the try block commands will establish a connection between this file and the mysql database
        try
        {
            Connection con= Connector.getCon();
            
            //declaring the query into the mysql database to update the information of the matched student ID row in the student table
            PreparedStatement ps = con.prepareStatement("update student set Name=?, Class=?, Gender=?, ContactNo=?, Email=?, Address=?, Marks=?, StudentID=? where StudentID="+studentID+"");
            ps.setString(1, name);
            ps.setString(2, classInput);
            ps.setString(3, gender);
            ps.setString(4, contactNo);
            ps.setString(5, email);
            ps.setString(6, address);
            ps.setInt(7, score);
            ps.setString(8, studentID);
            
            //executing the update. After the update a popup JFrame will appear to show the success message.
            ps.executeUpdate();
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, "Successfully Updated");
            
            //once the user exits the popup JFrame, the AdminManageStudents page will refresh.
            setVisible(false);
            new AdminManageStudents().setVisible(true);
        }
        
        //a catch block to go alongside the try block if the try block fails which catches an exception if an error occurs
        catch(Exception e)
        {
            //displays a JFrame that is basically nothing. If the catch block is activated, I take it as an indication that there is an error
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, e);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    //RUN COMMAND GENERATED BY NETBEANS
    public static void main(String args[]) {
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminManageStudents().setVisible(true);
            }
        });
    }

    
    //JFRAME Variables generated with the front end design console from netbeans
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressInputField;
    private javax.swing.JLabel addressTitle;
    private javax.swing.JTextField classInputField;
    private javax.swing.JLabel classTitle;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField contactNoInputField;
    private javax.swing.JLabel contactNoTitle;
    private javax.swing.JButton deleteAllButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailInputField;
    private javax.swing.JLabel emailTitle;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField genderInputField;
    private javax.swing.JLabel genderTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel manageStudentTitle;
    private javax.swing.JTextField nameInputField;
    private javax.swing.JLabel nameTitle;
    private javax.swing.JTextField scoreInputField;
    private javax.swing.JLabel scoreTitle;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField studentIDInputField;
    private javax.swing.JLabel studentIDTitle;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
